/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hdsb.gwss.devika.FinalPerformanceTask;

import java.io.File;
import java.util.Random;
import nu.xom.Builder;
import nu.xom.Document;
import nu.xom.Element;
import nu.xom.Elements;

/**
 *
 * @author drruh
 */
public class QuestionsScreen extends javax.swing.JFrame {

    Document doc;
    Elements questions;
    int questionNumber;
    int score = 0;
    
    //int[] order = questionsOrder(1,8);

    /**
     * Creates new form QuestionsScreen
     */
    public QuestionsScreen() {
        initComponents();

        
        File file = new File("summativeCSQuestions.xml");
        readXML(file);

        
       
        
        questionNumber = 1;
                
        String question = questions.get(questionNumber - 1).getFirstChildElement("actualQuestion").getValue();

        String optionA = questions.get(questionNumber - 1).getFirstChildElement("optionA").getValue();
        String optionB = questions.get(questionNumber - 1).getFirstChildElement("optionB").getValue();
        String optionC = questions.get(questionNumber - 1).getFirstChildElement("optionC").getValue();
        String optionD = questions.get(questionNumber - 1).getFirstChildElement("optionD").getValue();

        jTextAreaQuestion.setText(question);
        jTextAreaOptionA.setText(optionA);
        jTextAreaOptionB.setText(optionB);
        jTextAreaOptionC.setText(optionC);
        jTextAreaOptionD.setText(optionD);

        jTextFieldQuestionNum.setText("" + questionNumber );
        jTextFieldScore.setText("" + score);
        jTextFieldAnswerChecked.setText("Select an Answer.");
        jButtonNext.setText("Check Answer");
        

    }

    public void readXML(File file) {
        Element root;
        Builder builder = new Builder();

        if (file.exists()) {

            try {
                doc = builder.build(file);
                root = doc.getRootElement();
                questions = root.getChildElements();

            } catch (Exception e) {
                e.printStackTrace();

            }
        } else {

            root = new Element("questions");
            doc = new Document(root);
        }

    }

    public boolean answerCorrect(String button) {

        String correctAnswer = questions.get(questionNumber - 1).getFirstChildElement("correct").getValue();

        String answer = questions.get(questionNumber - 1).getFirstChildElement(button).getValue();

        return (answer.compareTo(correctAnswer) == 0);

    }
    
    public static int linearSearch(int[] data, int num) {
        
        int index = -1;
        
        for (int i = 0 ; i < data.length; i++ ) {
            
            
            if (data[i] == num) {
                index = i;
                return index;
            }
 
        }
        
        return index;
    }
    
    /*
    public static int[] questionsOrder(int min, int max) {
        
        Random rand = new Random();
        
        int value;
        int[] listOfRandoms = new int[max];
        
        for (int num = 0; num < max; num++) {
            value = rand.nextInt(max) + min;
            
            if(linearSearch(listOfRandoms, value) != -1) {
                num -= 1;
            }
            else {
                listOfRandoms[num] = value;
            }
            

        }
        return listOfRandoms;
    }
    
    
    public static void printArray(int[] data) {
        
        for (int i=0; i < data.length; i++) {
            System.out.print(data[i] + " ");
        }
        System.out.println("");
    }
    */
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabelQuestionNum = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldScore = new javax.swing.JTextField();
        jTextFieldQuestionNum = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextAreaQuestion = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaOptionC = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaOptionA = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaOptionB = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaOptionD = new javax.swing.JTextArea();
        jRadioButtonOptionA = new javax.swing.JRadioButton();
        jRadioButtonOptionB = new javax.swing.JRadioButton();
        jRadioButtonOptionC = new javax.swing.JRadioButton();
        jRadioButtonOptionD = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jButtonNext = new javax.swing.JButton();
        jTextFieldAnswerChecked = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabelQuestionNum.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabelQuestionNum.setForeground(new java.awt.Color(0, 0, 0));
        jLabelQuestionNum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelQuestionNum.setText("Question: ");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Score:");

        jTextFieldScore.setEditable(false);
        jTextFieldScore.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldScore.setText("3");

        jTextFieldQuestionNum.setEditable(false);
        jTextFieldQuestionNum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldQuestionNum.setText("4");

        jScrollPane7.setBorder(null);

        jTextAreaQuestion.setEditable(false);
        jTextAreaQuestion.setColumns(20);
        jTextAreaQuestion.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jTextAreaQuestion.setLineWrap(true);
        jTextAreaQuestion.setRows(3);
        jTextAreaQuestion.setText("Put the question here.");
        jTextAreaQuestion.setWrapStyleWord(true);
        jScrollPane7.setViewportView(jTextAreaQuestion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelQuestionNum, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jTextFieldQuestionNum, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldScore, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelQuestionNum, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldQuestionNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setBorder(null);

        jTextAreaOptionC.setEditable(false);
        jTextAreaOptionC.setColumns(20);
        jTextAreaOptionC.setLineWrap(true);
        jTextAreaOptionC.setRows(5);
        jTextAreaOptionC.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextAreaOptionC);

        jScrollPane3.setBorder(null);

        jTextAreaOptionA.setEditable(false);
        jTextAreaOptionA.setColumns(20);
        jTextAreaOptionA.setLineWrap(true);
        jTextAreaOptionA.setRows(5);
        jTextAreaOptionA.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextAreaOptionA);

        jScrollPane5.setBorder(null);

        jTextAreaOptionB.setEditable(false);
        jTextAreaOptionB.setColumns(20);
        jTextAreaOptionB.setLineWrap(true);
        jTextAreaOptionB.setRows(5);
        jTextAreaOptionB.setWrapStyleWord(true);
        jScrollPane5.setViewportView(jTextAreaOptionB);

        jScrollPane6.setBorder(null);

        jTextAreaOptionD.setEditable(false);
        jTextAreaOptionD.setColumns(20);
        jTextAreaOptionD.setLineWrap(true);
        jTextAreaOptionD.setRows(5);
        jTextAreaOptionD.setWrapStyleWord(true);
        jScrollPane6.setViewportView(jTextAreaOptionD);

        buttonGroup1.add(jRadioButtonOptionA);
        jRadioButtonOptionA.setText("jRadioButton1");
        jRadioButtonOptionA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOptionAActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonOptionB);
        jRadioButtonOptionB.setText("jRadioButton1");
        jRadioButtonOptionB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOptionBActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonOptionC);
        jRadioButtonOptionC.setText("jRadioButton1");
        jRadioButtonOptionC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOptionCActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonOptionD);
        jRadioButtonOptionD.setText("jRadioButton1");
        jRadioButtonOptionD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOptionDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jRadioButtonOptionC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jRadioButtonOptionA, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jRadioButtonOptionB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jRadioButtonOptionD, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jRadioButtonOptionA))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jRadioButtonOptionB)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jRadioButtonOptionC)
                                .addGap(54, 54, 54))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jRadioButtonOptionD)
                                .addGap(56, 56, 56))))))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jButtonNext.setText("Next");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jTextFieldAnswerChecked.setEditable(false);
        jTextFieldAnswerChecked.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextFieldAnswerChecked.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldAnswerChecked.setText("That Is Correct!");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonNext, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldAnswerChecked, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldAnswerChecked, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed

        boolean givePoint = false;
        boolean showResults = false;
        
        
        String correctAnswer = questions.get(questionNumber - 1).getFirstChildElement("correct").getValue();
        
        if ((jButtonNext.getText().compareTo("Check Answer") == 0)) {
            
            
            if (jRadioButtonOptionA.isSelected()) {
                showResults = true;

                if (answerCorrect("optionA")) {
                    jTextFieldAnswerChecked.setText("That's Correct!");
                    givePoint = true;
                } else {
                    jTextFieldAnswerChecked.setText("Incorrect. The answer is" + " " + correctAnswer);
                }
            }
            if (jRadioButtonOptionB.isSelected()) {
                showResults = true;
                if (answerCorrect("optionB")) {
                    jTextFieldAnswerChecked.setText("That's Correct!");
                    givePoint = true;
                } else {
                    jTextFieldAnswerChecked.setText("Incorrect. The answer is" + " " + correctAnswer);
                }
            }
            if (jRadioButtonOptionC.isSelected()) {
                showResults = true;
                if (answerCorrect("optionC")) {
                    jTextFieldAnswerChecked.setText("That's Correct!");
                    givePoint = true;
                } else {
                    jTextFieldAnswerChecked.setText("Incorrect. The answer is" + " " + correctAnswer);
                }
            }
            if (jRadioButtonOptionD.isSelected()) {
                showResults = true;
                if (answerCorrect("optionD")) {
                    jTextFieldAnswerChecked.setText("That's Correct!");
                    givePoint = true;
                } else {
                    jTextFieldAnswerChecked.setText("Incorrect. The answer is" + " " + correctAnswer);
                }
            }
            
            
            jButtonNext.setText("Next");
            
        }
        
        
        if (jButtonNext.getText().compareTo("Next") == 0) {
            questionNumber += 1;
            

            if (showResults) {
                    questionNumber -= 1;
                    if (givePoint) {
                        score += 1;
                        
                    }
                }
                else {
                    buttonGroup1.clearSelection();
                    jTextFieldAnswerChecked.setText("Select an answer.");
                }
            jTextFieldQuestionNum.setText("" + questionNumber);
            if (questionNumber <= questions.size()) {
                
                String question = questions.get(questionNumber - 1).getFirstChildElement("actualQuestion").getValue();

                String optionA = questions.get(questionNumber - 1).getFirstChildElement("optionA").getValue();
                String optionB = questions.get(questionNumber - 1).getFirstChildElement("optionB").getValue();
                String optionC = questions.get(questionNumber - 1).getFirstChildElement("optionC").getValue();
                String optionD = questions.get(questionNumber - 1).getFirstChildElement("optionD").getValue();

                jTextAreaQuestion.setText(question);
                jTextAreaOptionA.setText(optionA);
                jTextAreaOptionB.setText(optionB);
                jTextAreaOptionC.setText(optionC);
                jTextAreaOptionD.setText(optionD);

                jTextFieldScore.setText(""+score);
                
                
            } 
            else {
                FinalScreen results = new FinalScreen(score);
                results.setVisible(true);

                this.dispose();
            }
            
   
        }
        
        /*
        if (jButtonNext.getText().compareTo("Next") == 0) {
            
            int questionNumberIndex = linearSearch(order, questionNumber);
            
            if (questionNumberIndex < order.length - 1) {
                questionNumberIndex += 1;
                questionNumber = order[questionNumberIndex];
            }
            else if (questionNumberIndex >= order.length - 1) {
                //questionNumberIndex -= 1;
                questionNumber = order[questionNumberIndex];
            }

            if (showResults) {
                    questionNumberIndex -= 1;
                    questionNumber = order[questionNumberIndex];
                    if (givePoint) {
                        score += 1;
                    }
                }
                else {
                    buttonGroup1.clearSelection();
                    jTextFieldAnswerChecked.setText("Select an answer.");
                }
            System.out.println(questionNumberIndex);
            jTextFieldQuestionNum.setText("" + (questionNumberIndex));
            
            if (questionNumber <= questions.size()) {
                
                String question = questions.get(questionNumber - 1).getFirstChildElement("actualQuestion").getValue();

                String optionA = questions.get(questionNumber - 1).getFirstChildElement("optionA").getValue();
                String optionB = questions.get(questionNumber - 1).getFirstChildElement("optionB").getValue();
                String optionC = questions.get(questionNumber - 1).getFirstChildElement("optionC").getValue();
                String optionD = questions.get(questionNumber - 1).getFirstChildElement("optionD").getValue();

                jLabelQuestion.setText(question);
                jTextAreaOptionA.setText(optionA);
                jTextAreaOptionB.setText(optionB);
                jTextAreaOptionC.setText(optionC);
                jTextAreaOptionD.setText(optionD);

                jTextFieldScore.setText(""+score);
                
                
            }
            
            else {
                FinalScreen results = new FinalScreen(score);
                results.setVisible(true);

                this.dispose();
            }
            
   
        }
        */
        
        

    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jRadioButtonOptionDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOptionDActionPerformed
        jButtonNext.setText("Check Answer");
    }//GEN-LAST:event_jRadioButtonOptionDActionPerformed

    private void jRadioButtonOptionAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOptionAActionPerformed
        jButtonNext.setText("Check Answer");
    }//GEN-LAST:event_jRadioButtonOptionAActionPerformed

    private void jRadioButtonOptionCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOptionCActionPerformed
        jButtonNext.setText("Check Answer");
    }//GEN-LAST:event_jRadioButtonOptionCActionPerformed

    private void jRadioButtonOptionBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOptionBActionPerformed
        jButtonNext.setText("Check Answer");
    }//GEN-LAST:event_jRadioButtonOptionBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuestionsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuestionsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuestionsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuestionsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuestionsScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelQuestionNum;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButtonOptionA;
    private javax.swing.JRadioButton jRadioButtonOptionB;
    private javax.swing.JRadioButton jRadioButtonOptionC;
    private javax.swing.JRadioButton jRadioButtonOptionD;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea jTextAreaOptionA;
    private javax.swing.JTextArea jTextAreaOptionB;
    private javax.swing.JTextArea jTextAreaOptionC;
    private javax.swing.JTextArea jTextAreaOptionD;
    private javax.swing.JTextArea jTextAreaQuestion;
    private javax.swing.JTextField jTextFieldAnswerChecked;
    private javax.swing.JTextField jTextFieldQuestionNum;
    private javax.swing.JTextField jTextFieldScore;
    // End of variables declaration//GEN-END:variables
}
